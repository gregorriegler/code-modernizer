from modernizer.tools.tool_library import ToolLibrary
from modernizer.tools.auto_generated_tool import AutoGeneratedTool
from .test_helpers import (
    create_temp_file,
    create_temp_directory_structure,
    verifyTool
)

library = ToolLibrary()

def test_ls_tool_basic_directory(tmp_path):
    directory_path, _, _, _, _ = create_temp_directory_structure(tmp_path)
    
    verifyTool(library, f"/ls {directory_path}")

def test_ls_tool_nonexistent_directory():
    verifyTool(library, "/ls /nonexistent/path")

def test_unknown_command():
    verifyTool(library, "/unknown-command arg1 arg2")

def test_no_command_in_text():
    verifyTool(library, "This is just regular text without commands")

def test_auto_generated_tools_discovered():
    auto_generated_tools = [tool for tool in library.tools if isinstance(tool, AutoGeneratedTool)]
    discovered_tool_names = [tool.name for tool in auto_generated_tools]
    
    assert len(auto_generated_tools) > 1, f"Expected more than 1 auto-generated tool, found {len(auto_generated_tools)}"
    assert 'extract-method' in discovered_tool_names, f"extract-method not found in discovered tools: {discovered_tool_names}"

